"use strict";
/**
 * @license
 * Copyright Google LLC
 * SPDX-License-Identifier: Apache-2.0
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.getStyleNonce = exports.getScriptNonce = exports.windowOpen = void 0;
const url_builders_js_1 = require("../../builders/url_builders.js");
/**
 * windowOpen calls {@link Window.open} on the given {@link Window}, given a
 * target {@link Url}.
 */
function windowOpen(win, url, target, features) {
    const sanitizedUrl = (0, url_builders_js_1.unwrapUrlOrSanitize)(url);
    if (sanitizedUrl !== undefined) {
        return win.open(sanitizedUrl, target, features);
    }
    return null;
}
exports.windowOpen = windowOpen;
/**
 * Returns CSP nonce, if set for any script tag.
 */
function getScriptNonce(doc) {
    return getNonceFor('script', doc);
}
exports.getScriptNonce = getScriptNonce;
/**
 * Returns CSP nonce, if set for any style tag.
 */
function getStyleNonce(doc) {
    return getNonceFor('style', doc);
}
exports.getStyleNonce = getStyleNonce;
function getNonceFor(elementName, doc = document) {
    var _a;
    // document.querySelector can be undefined in non-browser environments.
    const el = (_a = doc.querySelector) === null || _a === void 0 ? void 0 : _a.call(doc, `${elementName}[nonce]`);
    if (el == null) {
        return '';
    }
    // Try to get the nonce from the IDL property first, because browsers that
    // implement additional nonce protection features (currently only Chrome) to
    // prevent nonce stealing via CSS do not expose the nonce via attributes.
    // See https://github.com/whatwg/html/issues/2369
    return el['nonce'] || el.getAttribute('nonce') || '';
}
