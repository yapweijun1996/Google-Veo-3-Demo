"use strict";
/**
 * @license
 * Copyright Google LLC
 * SPDX-License-Identifier: Apache-2.0
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.setLinkWithResourceUrlHrefAndRel = exports.setLinkHrefAndRel = void 0;
const url_builders_js_1 = require("../../builders/url_builders.js");
const resource_url_impl_js_1 = require("../../internals/resource_url_impl.js");
const SAFE_URL_REL_VALUES = [
    'alternate',
    'author',
    'bookmark',
    'canonical',
    'cite',
    'help',
    'icon',
    'license',
    'modulepreload',
    'next',
    'prefetch',
    'dns-prefetch',
    'prerender',
    'preconnect',
    'preload',
    'prev',
    'search',
    'subresource',
];
function setLinkHrefAndRel(link, url, rel) {
    if ((0, resource_url_impl_js_1.isResourceUrl)(url)) {
        setLinkWithResourceUrlHrefAndRel(link, url, rel);
        return;
    }
    else {
        if (SAFE_URL_REL_VALUES.indexOf(rel) === -1) {
            throw new Error(`TrustedResourceUrl href attribute required with rel="${rel}"`);
        }
        const sanitizedUrl = (0, url_builders_js_1.unwrapUrlOrSanitize)(url);
        if (sanitizedUrl === undefined) {
            return;
        }
        link.href = sanitizedUrl;
    }
    link.rel = rel;
}
exports.setLinkHrefAndRel = setLinkHrefAndRel;
/**
 * Safely sets a link element's "href" property using a TrustedResourceUrl and
 * an arbitrary "rel" value. It is recommended to use this method when the url
 * is always a TrustedResourceUrl, since the resulting binary size will be
 * smaller.
 */
function setLinkWithResourceUrlHrefAndRel(link, url, rel) {
    link.href = (0, resource_url_impl_js_1.unwrapResourceUrl)(url).toString();
    link.rel = rel;
}
exports.setLinkWithResourceUrlHrefAndRel = setLinkWithResourceUrlHrefAndRel;
