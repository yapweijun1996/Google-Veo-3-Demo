"use strict";
/**
 * @license
 * Copyright Google LLC
 * SPDX-License-Identifier: Apache-2.0
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.workerGlobalScopeImportScripts = exports.createSharedWorker = exports.createWorker = void 0;
const resource_url_impl_js_1 = require("../../internals/resource_url_impl.js");
/**
 * Safely creates a Web Worker.
 *
 * Example usage:
 *   const trustedResourceUrl = trustedResourceUrl`/safe_script.js`;
 *   createWorker(trustedResourceUrl);
 * which is a safe alternative to
 *   new Worker(url);
 * The latter can result in loading untrusted code.
 */
function createWorker(url, options) {
    return new Worker((0, resource_url_impl_js_1.unwrapResourceUrl)(url), options);
}
exports.createWorker = createWorker;
/** Safely creates a shared Web Worker. */
function createSharedWorker(url, options) {
    return new SharedWorker((0, resource_url_impl_js_1.unwrapResourceUrl)(url), options);
}
exports.createSharedWorker = createSharedWorker;
/** Safely calls importScripts */
function workerGlobalScopeImportScripts(scope, ...urls) {
    scope.importScripts(...urls.map((url) => (0, resource_url_impl_js_1.unwrapResourceUrl)(url)));
}
exports.workerGlobalScopeImportScripts = workerGlobalScopeImportScripts;
