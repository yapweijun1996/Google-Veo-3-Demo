/**
 * @license
 * Copyright Google LLC
 * SPDX-License-Identifier: Apache-2.0
 */
/** @fileoverview Internal implementations of SafeStyleSheet. */
import '../environment/dev.js';
import { ensureTokenIsValid, secretToken } from './secrets.js';
/**
 * A complete CSS style sheet, safe to use in style contexts in an HTML
 * document or DOM APIs.
 *
 * @final
 */
export class SafeStyleSheet {
    constructor(token, value) {
        if (process.env.NODE_ENV !== 'production') {
            ensureTokenIsValid(token);
        }
        this.privateDoNotAccessOrElseWrappedStyleSheet = value;
    }
    toString() {
        return this.privateDoNotAccessOrElseWrappedStyleSheet;
    }
}
const StyleSheetImpl = SafeStyleSheet;
/**
 * Builds a new `SafeStyleSheet` from the given string, without enforcing
 * safety guarantees. This shouldn't be exposed to application developers, and
 * must only be used as a step towards safe builders or safe constants.
 */
export function createStyleSheetInternal(value) {
    return new StyleSheetImpl(secretToken, value);
}
/**
 * Checks if the given value is a `SafeStyleSheet` instance.
 */
export function isStyleSheet(value) {
    return value instanceof SafeStyleSheet;
}
/**
 * Returns the string value of the passed `SafeStyleSheet` object while ensuring it
 * has the correct type.
 */
export function unwrapStyleSheet(value) {
    if (isStyleSheet(value)) {
        return value
            .privateDoNotAccessOrElseWrappedStyleSheet;
    }
    let message = '';
    if (process.env.NODE_ENV !== 'production') {
        message = `Unexpected type when unwrapping SafeStyleSheet, got '${value}' of type '${typeof value}'`;
    }
    throw new Error(message);
}
